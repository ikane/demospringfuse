/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-jpa:src/main/java/project/domain/Entity.e.vm.java
 */
package org.ikane.demospringfuse.domain;

import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlTransient;
import org.apache.log4j.Logger;
import org.hibernate.validator.constraints.NotEmpty;
import org.ikane.demospringfuse.domain.IdentifiableHashBuilder;
import com.google.common.base.Objects;

@Entity
@Table(name = "LEGACY", uniqueConstraints = { @UniqueConstraint(name = "PRIMARY_KEY_8", columnNames = { "NAME", "CODE", "DEPT" }) })
public class Legacy implements Identifiable<LegacyPk>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = Logger.getLogger(Legacy.class);

    // Composite primary key
    private LegacyPk id = new LegacyPk();

    // Raw attributes
    private String extraInfo; // not null

    // ---------------------------
    // Constructors
    // ---------------------------

    public Legacy() {
    }

    public Legacy(LegacyPk primaryKey) {
        setId(primaryKey);
    }

    // -----------------------
    // Composite Primary Key
    // -----------------------

    /**
     * Returns the composite primary key.
     */
    @Override
    @EmbeddedId
    public LegacyPk getId() {
        return id;
    }

    /**
     * Set the composite primary key.
     * @param id the composite primary key.
     */
    @Override
    public void setId(LegacyPk id) {
        this.id = id;
    }

    /**
     * Tells whether or not this instance has a non empty composite primary key set.
     * @return true if a non empty primary key is set, false otherwise
     */
    @Override
    @Transient
    @XmlTransient
    public boolean isIdSet() {
        return getId() != null && getId().isIdSet();
    }

    /**
     * Helper method to set directly the code into the LegacyPk corresponding field.
     * todo document $pkAttribute.comment
     * @param code the code
     */
    public void setCode(String code) {
        if (getId() == null) {
            setId(new LegacyPk());
        }

        getId().setCode(code);
    }

    /**
     * Helper method to get directly the code from the LegacyPk corresponding field.
     * @return the code
     */
    @Transient
    @XmlTransient
    @Size(max = 8)
    @NotEmpty
    public String getCode() {
        return getId() != null ? getId().getCode() : null;
    }

    /**
     * Helper method to set directly the dept into the LegacyPk corresponding field.
     * todo document $pkAttribute.comment
     * @param dept the dept
     */
    public void setDept(Integer dept) {
        if (getId() == null) {
            setId(new LegacyPk());
        }

        getId().setDept(dept);
    }

    /**
     * Helper method to get directly the dept from the LegacyPk corresponding field.
     * @return the dept
     */
    @Transient
    @XmlTransient
    @NotNull
    public Integer getDept() {
        return getId() != null ? getId().getDept() : null;
    }

    /**
     * Helper method to set directly the name into the LegacyPk corresponding field.
     * todo document $pkAttribute.comment
     * @param name the name
     */
    public void setName(String name) {
        if (getId() == null) {
            setId(new LegacyPk());
        }

        getId().setName(name);
    }

    /**
     * Helper method to get directly the name from the LegacyPk corresponding field.
     * @return the name
     */
    @Transient
    @XmlTransient
    @Size(max = 16)
    @NotEmpty
    public String getName() {
        return getId() != null ? getId().getName() : null;
    }

    // -------------------------------
    // Getter & Setter
    // -------------------------------

    // -- [extraInfo] ------------------------

    @Size(max = 100)
    @NotEmpty
    @Column(name = "EXTRA_INFO", nullable = false, length = 100)
    public String getExtraInfo() {
        return extraInfo;
    }

    public void setExtraInfo(String extraInfo) {
        this.extraInfo = extraInfo;
    }

    /**
     * Set the default values.
     */
    public void initDefaultValues() {
    }

    /**
     * equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof Legacy && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this Legacy instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return Objects.toStringHelper(this) //
                .add("extraInfo", getExtraInfo()) //
                .toString();
    }
}