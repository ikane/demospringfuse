/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-jpa:src/main/java/project/repository/RepositoryImpl.e.vm.java
 */
package org.ikane.demospringfuse.repository;

import javax.inject.Inject;

import org.apache.log4j.Logger;

import javax.inject.Named;
import javax.inject.Singleton;

import org.ikane.demospringfuse.dao.support.GenericDao;
import org.ikane.demospringfuse.repository.support.RepositoryImpl;
import org.ikane.demospringfuse.domain.Address;
import org.ikane.demospringfuse.dao.AddressDao;

/**
 * Default implementation of the {@link AddressRepository} interface.
 * Note: you may use multiple DAO from this layer.
 * @see AddressRepository
 */
@Named("addressRepository")
@Singleton
public class AddressRepositoryImpl extends RepositoryImpl<Address, Integer> implements AddressRepository {

    @SuppressWarnings("unused")
    private static final Logger log = Logger.getLogger(AddressRepositoryImpl.class);

    protected AddressDao addressDao;

    @Inject
    public void setAddressDao(AddressDao addressDao) {
        this.addressDao = addressDao;
    }

    /**
     * Dao getter used by the {@link RepositoryImpl}.
     */
    @Override
    public GenericDao<Address, Integer> getDao() {
        return addressDao;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Address getNew() {
        return new Address();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Address getNewWithDefaults() {
        Address result = getNew();
        result.initDefaultValues();
        return result;
    }

}