/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-jpa:src/main/java/project/repository/RepositoryImpl.e.vm.java
 */
package org.ikane.demospringfuse.repository;

import javax.inject.Inject;

import org.apache.log4j.Logger;

import javax.inject.Named;
import javax.inject.Singleton;
import org.springframework.transaction.annotation.Transactional;

import org.ikane.demospringfuse.dao.support.GenericDao;
import org.ikane.demospringfuse.repository.support.RepositoryImpl;
import org.ikane.demospringfuse.domain.Book;
import org.ikane.demospringfuse.dao.BookDao;

/**
 * Default implementation of the {@link BookRepository} interface.
 * Note: you may use multiple DAO from this layer.
 * @see BookRepository
 */
@Named("bookRepository")
@Singleton
public class BookRepositoryImpl extends RepositoryImpl<Book, Integer> implements BookRepository {

    private static final Logger log = Logger.getLogger(BookRepositoryImpl.class);

    protected BookDao bookDao;

    @Inject
    public void setBookDao(BookDao bookDao) {
        this.bookDao = bookDao;
    }

    /**
     * Dao getter used by the {@link RepositoryImpl}.
     */
    @Override
    public GenericDao<Book, Integer> getDao() {
        return bookDao;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Book getNew() {
        return new Book();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Book getNewWithDefaults() {
        Book result = getNew();
        result.initDefaultValues();
        return result;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    @Transactional
    public void delete(Book book) {
        if (book == null) {
            if (log.isDebugEnabled()) {
                log.debug("Skipping deletion for null model!");
            }

            return;
        }

        // remove the reference from the associated account
        if (book.getAccount() != null) {
            book.getAccount().removeBook(book);
        }

        super.delete(book);
    }
}